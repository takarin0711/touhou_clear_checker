services:
  # MySQL データベース
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE:-touhou_clear_checker}
      MYSQL_USER: ${MYSQL_USER:-touhou_user}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    secrets:
      - mysql_root_password
      - mysql_password
    networks:
      - touhou-network
    command: --default-authentication-plugin=mysql_native_password 
             --character-set-server=utf8mb4 
             --collation-server=utf8mb4_unicode_ci
             --init-connect='SET NAMES utf8mb4;'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
      interval: 10s

  # バックエンド（FastAPI）
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      # ソースコードのホットリロード用
      - ./backend:/app
      # SQLiteデータベースの永続化
      - ./backend/touhou_clear_checker.db:/app/touhou_clear_checker.db
      # venv313は除外（Dockerコンテナ内でPython環境を管理）
      - /app/venv313
      - /app/venv39
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      # デフォルトはSQLite、MySQLに切り替える場合は以下をコメントアウト
      # - DATABASE_URL=${DATABASE_URL}
    # 依存関係はoverride fileで設定
    networks:
      - touhou-network

  # フロントエンド（React）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      # ソースコードのホットリロード用
      - ./frontend:/app
      # node_modulesは除外（Dockerコンテナ内で管理）
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true  # ファイル変更検知の改善
    depends_on:
      - backend
    networks:
      - touhou-network

  # データベース初期化サービス（一回のみ実行）
  db-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backend/touhou_clear_checker.db:/app/touhou_clear_checker.db
    environment:
      - PYTHONPATH=/app
    command: python scripts/initialize_database.py --verify
    networks:
      - touhou-network

  # MySQL データベース初期化サービス
  mysql-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
    command: python scripts/initialize_database.py --fresh
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - touhou-network
    profiles:
      - mysql

networks:
  touhou-network:
    driver: bridge

volumes:
  # SQLiteデータベース永続化用（名前付きボリューム）
  db-data:
  # MySQLデータベース永続化用
  mysql-data:

secrets:
  mysql_root_password:
    file: .mysql_root_password
  mysql_password:
    file: .mysql_password